// Code generated by MockGen. DO NOT EDIT.
// Source: redis.go
//
// Generated by this command:
//
//	mockgen -source=redis.go -destination=redis_mock.go -package=redies
//
// Package redies is a generated GoMock package.
package redies

import (
	context "context"
	models "job-portal-api/internal/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRedisMethods is a mock of RedisMethods interface.
type MockRedisMethods struct {
	ctrl     *gomock.Controller
	recorder *MockRedisMethodsMockRecorder
}

// MockRedisMethodsMockRecorder is the mock recorder for MockRedisMethods.
type MockRedisMethodsMockRecorder struct {
	mock *MockRedisMethods
}

// NewMockRedisMethods creates a new mock instance.
func NewMockRedisMethods(ctrl *gomock.Controller) *MockRedisMethods {
	mock := &MockRedisMethods{ctrl: ctrl}
	mock.recorder = &MockRedisMethodsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRedisMethods) EXPECT() *MockRedisMethodsMockRecorder {
	return m.recorder
}

// AddToRedis mocks base method.
func (m *MockRedisMethods) AddToRedis(ctx context.Context, jid uint, jobData models.Job) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToRedis", ctx, jid, jobData)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToRedis indicates an expected call of AddToRedis.
func (mr *MockRedisMethodsMockRecorder) AddToRedis(ctx, jid, jobData any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToRedis", reflect.TypeOf((*MockRedisMethods)(nil).AddToRedis), ctx, jid, jobData)
}

// GetDataFromRedis mocks base method.
func (m *MockRedisMethods) GetDataFromRedis(ctx context.Context, jid uint) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataFromRedis", ctx, jid)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDataFromRedis indicates an expected call of GetDataFromRedis.
func (mr *MockRedisMethodsMockRecorder) GetDataFromRedis(ctx, jid any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataFromRedis", reflect.TypeOf((*MockRedisMethods)(nil).GetDataFromRedis), ctx, jid)
}
